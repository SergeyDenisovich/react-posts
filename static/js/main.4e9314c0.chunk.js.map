{"version":3,"sources":["store/reducer/postsReducer.ts","store/store.ts","components/ErrorBoundary.tsx","api/api.ts","store/actions/postsActions.ts","components/AddPost.tsx","components/PostsList.tsx","components/ConfirmDialog.tsx","App.tsx","index.tsx"],"names":["initialState","posts","isLoaded","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","type","payload","filter","post","id","applyMiddleware","thunk","ErrorBoundary","props","hasError","this","children","error","Component","instance","axios","create","baseURL","postsAPI","get","then","response","data","setLoaded","AddPostModal","showModal","hideModal","useSelector","dispatch","useDispatch","React","title","setTitle","description","setDescription","Modal","isOpen","onDismiss","containerClassName","contentStyles","container","className","header","onSubmit","e","preventDefault","trim","newPostId","length","body","call","TextField","label","value","onChange","ev","newTitleText","required","newTextAreaText","multiline","rows","footer","DefaultButton","onClick","text","PrimaryButton","mergeStyleSets","display","flexFlow","padding","borderRadius","flex","color","justifyContent","fontWeight","selectors","p","margin","theme","getTheme","PostsList","_selection","_columns","_handleRenderPage","checkId","selectedItem","selectToIndex","_onRenderRow","customStyles","root","whiteSpace","itemIndex","backgroundColor","palette","themeLighterAlt","DetailsRow","styles","key","name","fieldName","minWidth","maxWidth","isResizable","Selection","onSelectionChanged","setState","getSelection","prevProps","items","_handleClickPostDelete","bind","MarqueeSelection","selection","DetailsList","columns","setKey","layoutMode","DetailsListLayoutMode","justified","ariaLabelForSelectionColumn","ariaLabelForSelectAllCheckbox","checkButtonAriaLabel","onRenderDetailsFooter","_onRenderDetailsFooter","selectionMode","SelectionMode","single","onRenderRow","currentIDForDel","detailsFooterProps","item","groupNestingDepth","onRenderItemColumn","_renderDetailsFooterItemColumn","onRenderCheck","_onRenderCheckForFooterRow","index","column","detailsRowCheckStyles","visibility","DetailsRowCheck","selected","dialogStyles","main","dialogContentProps","DialogType","normal","closeButtonAriaLabel","subText","ConfirmDialog","hideDialog","toggleHideDialog","currentPostId","labelId","useId","subTextId","modalProps","titleAriaId","subtitleAriaId","isBlocking","Dialog","hidden","DialogFooter","App","useBoolean","toggle","isModalOpen","setTrue","setFalse","useState","setCurrentPostId","useEffect","a","console","log","Text","block","variant","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e9314c0.chunk.js","sourcesContent":["import { PostType } from '../actions/postsActions';\r\nimport { ActionTypes } from '../actions/postsActions';\r\n\r\nexport interface IState {\r\n  posts: Array<PostType>;\r\n  isLoaded: boolean;\r\n}\r\n\r\nconst initialState: IState = {\r\n  posts: [],\r\n  isLoaded: false,\r\n};\r\n\r\nexport const postsReducer = (state = initialState, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case 'ADD_POST':\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.payload],\r\n      };\r\n\r\n    case 'DELETE_POST':\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post.id !== action.payload),\r\n      };\r\n\r\n    case 'INIT_POSTS':\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n      };\r\n\r\n    case 'SET_LOADED':\r\n      return {\r\n        ...state,\r\n        isLoaded: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { postsReducer } from './reducer/postsReducer';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(postsReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import React, { Component } from 'react';\r\n\r\ntype ErrorBoundaryProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\ninterface IErrorBoundaryState {\r\n  hasError: boolean;\r\n}\r\n\r\nclass ErrorBoundary extends Component<ErrorBoundaryProps, IErrorBoundaryState> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: any): object {\r\n    return {\r\n      hasError: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h2>Что-то пошло не так. Посты не могут быть загружены</h2>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://jsonplaceholder.typicode.com/posts',\r\n});\r\n\r\nexport const postsAPI = {\r\n  getPosts() {\r\n    return instance.get('?_limit=10').then((response) => response.data);\r\n  },\r\n};\r\n","import { postsAPI } from '../../api/api';\r\n\r\nexport type PostType = {\r\n  userId?: number;\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n};\r\n\r\nfunction inferLiteralFromString<T extends string>(arg: T): T {\r\n  return arg;\r\n}\r\n\r\nexport const addPostToState = (post: PostType) => ({\r\n  type: inferLiteralFromString('ADD_POST'),\r\n  payload: post,\r\n});\r\n\r\nexport const deletePost = (id: number) => ({\r\n  type: inferLiteralFromString('DELETE_POST'),\r\n  payload: id,\r\n});\r\n\r\nexport const initPosts = (posts: Array<PostType>) => ({\r\n  type: inferLiteralFromString('INIT_POSTS'),\r\n  payload: posts,\r\n});\r\n\r\nexport const setLoaded = (payload: boolean) => ({\r\n  type: inferLiteralFromString('SET_LOADED'),\r\n  payload,\r\n});\r\n\r\nexport type ActionTypes =\r\n  | ReturnType<typeof addPostToState>\r\n  | ReturnType<typeof deletePost>\r\n  | ReturnType<typeof initPosts>\r\n  | ReturnType<typeof setLoaded>;\r\n\r\n// fetch posts\r\nexport const fetchPosts = () => async (dispatch: any) => {\r\n  dispatch(setLoaded(true));\r\n\r\n  try {\r\n    const data = await postsAPI.getPosts();\r\n    dispatch(initPosts(data));\r\n    dispatch(setLoaded(false));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","// @ts-nocheck\r\nimport * as React from 'react';\r\nimport { mergeStyleSets, Modal } from '@fluentui/react';\r\nimport { DefaultButton, PrimaryButton } from '@fluentui/react/lib/Button';\r\nimport { TextField } from '@fluentui/react/lib/TextField';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IState } from '../store/reducer/postsReducer';\r\nimport { addPostToState } from '../store/actions/postsActions';\r\n\r\ninterface AddPostProps {\r\n  showModal: boolean;\r\n  hideModal: () => void;\r\n}\r\n\r\nexport const AddPostModal: React.FC<AddPostProps> = ({ showModal, hideModal }): React.ReactElement => {\r\n  const posts = useSelector((state: IState) => state.posts);\r\n  const dispatch = useDispatch();\r\n\r\n  const [title, setTitle] = React.useState<string>('');\r\n  const [description, setDescription] = React.useState<string>('');\r\n\r\n  const addPost = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (title?.trim() !== '' && description?.trim() !== '') {\r\n      const newPostId = posts.length === 0 ? 1 : posts[posts.length - 1].id + 1;\r\n      const newPost = { id: newPostId, title, body: description };\r\n      dispatch(addPostToState(newPost));\r\n\r\n      hideModal.call(null);\r\n      setTitle('');\r\n      setDescription('');\r\n    }\r\n  };\r\n\r\n  const handleChangeTitle = (\r\n    ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    newTitleText: string\r\n  ): void => {\r\n    setTitle(newTitleText);\r\n  };\r\n\r\n  const handleChangeDescription = (\r\n    ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    newTextAreaText: string\r\n  ) => {\r\n    setDescription(newTextAreaText);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} onDismiss={hideModal} containerClassName={contentStyles.container}>\r\n        <div className={contentStyles.header}>\r\n          <h2>New Post</h2>\r\n        </div>\r\n        <form onSubmit={addPost}>\r\n          <div className={contentStyles.body}>\r\n            <TextField label='Post title: ' value={title} onChange={handleChangeTitle} required />\r\n            <TextField\r\n              label='Post description:'\r\n              value={description}\r\n              onChange={handleChangeDescription}\r\n              multiline\r\n              rows={3}\r\n              required\r\n            />\r\n          </div>\r\n          <div className={contentStyles.footer}>\r\n            <DefaultButton onClick={hideModal} text='Cancel' />\r\n            <PrimaryButton text='Add Post' type='submit' />\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst contentStyles = mergeStyleSets({\r\n  container: {\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n  },\r\n  header: {\r\n    flex: '0 1 auto',\r\n    color: '#000',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  body: {\r\n    flex: '0 1 auto',\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    padding: '10px 0',\r\n    selectors: {\r\n      p: { margin: '10px 0', fontWeight: 'bold' },\r\n    },\r\n  },\r\n  footer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '15px 0',\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport {\r\n  DetailsList,\r\n  DetailsListLayoutMode,\r\n  IColumn,\r\n  DetailsRow,\r\n  SelectionMode,\r\n  DetailsRowCheck,\r\n  IDetailsRowBaseProps,\r\n  IDetailsRowCheckStyles,\r\n  Selection,\r\n  IDetailsListProps,\r\n  IDetailsRowStyles,\r\n} from '@fluentui/react/lib/DetailsList';\r\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\r\nimport { MarqueeSelection } from '@fluentui/react';\r\nimport { getTheme } from '@fluentui/react/lib/Styling';\r\n\r\nconst theme = getTheme();\r\n\r\ninterface IPostsListState {\r\n  selectedItem: Array<any>;\r\n}\r\n\r\ninterface IPostsListProps {\r\n  posts: any;\r\n  currentIDForDel: (id: number) => void;\r\n}\r\n\r\nexport class PostsList extends React.PureComponent<IPostsListProps, IPostsListState> {\r\n  private _selection: Selection;\r\n  private _columns: Array<IColumn>;\r\n\r\n  constructor(props: IPostsListProps) {\r\n    super(props);\r\n\r\n    this._columns = [\r\n      { key: 'column1', name: 'ID', fieldName: 'id', minWidth: 10, maxWidth: 50 },\r\n      { key: 'column2', name: 'Title', fieldName: 'title', minWidth: 100, maxWidth: 200, isResizable: true },\r\n      { key: 'column3', name: 'Description', fieldName: 'body', minWidth: 100, maxWidth: 200, isResizable: true },\r\n    ];\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => this.setState({ selectedItem: this._selection.getSelection() }),\r\n    });\r\n\r\n    this.state = {\r\n      selectedItem: [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps: any) {\r\n    if (prevProps.posts !== this.props.posts && this.state.selectedItem.length !== 0) {\r\n      this._handleRenderPage();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { selectedItem } = this.state;\r\n    const items = this.props.posts;\r\n\r\n    return (\r\n      <div>\r\n        {selectedItem.length > 0 && (\r\n          <p>\r\n            <PrimaryButton\r\n              text='Delete current post'\r\n              onClick={this._handleClickPostDelete.bind(this, selectedItem[0].id)}\r\n            />\r\n          </p>\r\n        )}\r\n        <MarqueeSelection selection={this._selection}>\r\n          <DetailsList\r\n            items={items}\r\n            columns={this._columns}\r\n            setKey='set'\r\n            layoutMode={DetailsListLayoutMode.justified}\r\n            ariaLabelForSelectionColumn='Toggle selection'\r\n            ariaLabelForSelectAllCheckbox='Toggle selection for all items'\r\n            checkButtonAriaLabel='select row'\r\n            onRenderDetailsFooter={this._onRenderDetailsFooter}\r\n            selection={this._selection}\r\n            selectionMode={SelectionMode.single}\r\n            onRenderRow={this._onRenderRow}\r\n          />\r\n        </MarqueeSelection>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _handleRenderPage = () => {\r\n    let { checkId } = this.state.selectedItem[0];\r\n    this._selection.selectToIndex(checkId + 1, true);\r\n  };\r\n\r\n  private _onRenderRow: IDetailsListProps['onRenderRow'] = (props) => {\r\n    const customStyles: Partial<IDetailsRowStyles> = {\r\n      root: {\r\n        '& * div': {\r\n          whiteSpace: 'normal',\r\n        },\r\n      },\r\n    };\r\n    if (props) {\r\n      if (props.itemIndex % 2 === 0) {\r\n        customStyles.root = { backgroundColor: theme.palette.themeLighterAlt };\r\n      }\r\n\r\n      return <DetailsRow {...props} styles={customStyles} />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // click handler on button \"Delete current post\"\r\n  private _handleClickPostDelete(id: number) {\r\n    this.props.currentIDForDel(id);\r\n  }\r\n\r\n  private _onRenderDetailsFooter(detailsFooterProps: any): JSX.Element {\r\n    return (\r\n      <DetailsRow\r\n        {...detailsFooterProps}\r\n        columns={detailsFooterProps.columns}\r\n        item={{}}\r\n        itemIndex={-1}\r\n        groupNestingDepth={detailsFooterProps.groupNestingDepth}\r\n        selectionMode={SelectionMode.single}\r\n        selection={detailsFooterProps.selection}\r\n        onRenderItemColumn={_renderDetailsFooterItemColumn}\r\n        onRenderCheck={_onRenderCheckForFooterRow}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst _renderDetailsFooterItemColumn: IDetailsRowBaseProps['onRenderItemColumn'] = (item, index, column) => {\r\n  if (column) {\r\n    return (\r\n      <div>\r\n        <b>{column.name}</b>\r\n      </div>\r\n    );\r\n  }\r\n  return undefined;\r\n};\r\n\r\nconst detailsRowCheckStyles: Partial<IDetailsRowCheckStyles> = { root: { visibility: 'hidden' } };\r\n\r\nconst _onRenderCheckForFooterRow: IDetailsRowBaseProps['onRenderCheck'] = (props): JSX.Element => {\r\n  return <DetailsRowCheck {...props} styles={detailsRowCheckStyles} selected={true} />;\r\n};\r\n","import * as React from 'react';\r\nimport { Dialog, DialogType, DialogFooter } from '@fluentui/react/lib/Dialog';\r\nimport { PrimaryButton, DefaultButton } from '@fluentui/react/lib/Button';\r\nimport { useId } from '@fluentui/react-hooks';\r\nimport { deletePost } from '../store/actions/postsActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst dialogStyles = { main: { maxWidth: 450 } };\r\n\r\nconst dialogContentProps = {\r\n  type: DialogType.normal,\r\n  title: 'Delete current post?',\r\n  closeButtonAriaLabel: 'Close',\r\n  subText: 'If you want to delete post click Delete or Cancel this action',\r\n};\r\n\r\ntype ConfirmDialogProps = {\r\n  hideDialog: boolean;\r\n  toggleHideDialog: () => void;\r\n  currentPostId: number;\r\n};\r\n\r\nexport const ConfirmDialog: React.FC<ConfirmDialogProps> = ({ hideDialog, toggleHideDialog, currentPostId }) => {\r\n  const labelId: string = useId('dialogLabel');\r\n  const subTextId: string = useId('subTextLabel');\r\n  const dispatch = useDispatch();\r\n\r\n  const modalProps = React.useMemo(\r\n    () => ({\r\n      titleAriaId: labelId,\r\n      subtitleAriaId: subTextId,\r\n      isBlocking: false,\r\n      styles: dialogStyles,\r\n    }),\r\n    [labelId, subTextId]\r\n  );\r\n\r\n  const deleteCurrentPost = () => {\r\n    dispatch(deletePost(currentPostId));\r\n    toggleHideDialog.call(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        hidden={hideDialog}\r\n        onDismiss={toggleHideDialog}\r\n        dialogContentProps={dialogContentProps}\r\n        modalProps={modalProps}\r\n      >\r\n        <DialogFooter>\r\n          <PrimaryButton onClick={deleteCurrentPost} text='Delete post' />\r\n          <DefaultButton onClick={toggleHideDialog} text='Cancel' />\r\n        </DialogFooter>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","// @ts-nocheck\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IState } from './store/reducer/postsReducer';\nimport { fetchPosts } from './store/actions/postsActions';\nimport { AddPostModal } from './components/AddPost';\nimport { PostsList } from './components/PostsList';\nimport { useBoolean } from '@fluentui/react-hooks';\nimport { ConfirmDialog } from './components/ConfirmDialog';\nimport { Text } from '@fluentui/react/lib/Text';\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\n\nconst App: React.FC = () => {\n  const [hideDialog, { toggle: toggleHideDialog }] = useBoolean(true);\n  const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\n  const [currentPostId, setCurrentPostId] = React.useState<number | null>(null);\n  const dispatch = useDispatch();\n  const { posts, isLoaded } = useSelector((state: IState) => state);\n\n  React.useEffect(() => {\n    dispatch(fetchPosts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const confirmPostDelete = (id: number) => {\n    setCurrentPostId(id);\n    toggleHideDialog.call(null);\n  };\n\n  return (\n    <div className='App-wrapper'>\n      <Text block={true} variant={'large'} className='App-header'>\n        Posts List\n      </Text>\n      {!isModalOpen && <PrimaryButton text='Add post' onClick={showModal} />}\n      {isModalOpen && <AddPostModal showModal={isModalOpen} hideModal={() => hideModal()} />}\n      {isLoaded && <p>Loading posts...</p>}\n      {posts.length > 0 && <PostsList posts={posts} currentIDForDel={confirmPostDelete} />}\n      {!posts.length && !isLoaded ? <p>No posts</p> : ''}\n      {!hideDialog && (\n        <ConfirmDialog hideDialog={hideDialog} toggleHideDialog={toggleHideDialog} currentPostId={currentPostId} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nimport ErrorBoundary from './components/ErrorBoundary';\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}